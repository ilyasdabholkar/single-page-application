{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\single-page-application\\\\src\\\\components\\\\DishDetail.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, CardText, BreadcrumbItem, Breadcrumb, Button, Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.css';\nimport { Control, LocalForm, Errors } from 'react-redux-form'; //Functions for Validations\n//(1)Required field\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst required = val => val && val.length; //(2)Range \n\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCommentModalOpen: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleCommentModal = this.toggleCommentModal.bind(this);\n  }\n\n  toggleCommentModal() {\n    this.setState({\n      isCommentModalOpen: !this.state.isCommentModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    alert('Current State is: ' + JSON.stringify(values));\n    this.toggleCommentModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        color: \"secondary\",\n        onClick: this.toggleCommentModal,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-lg fa-pencil\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 81\n        }, this), \" Submit Comment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isCommentModalOpen,\n        toggle: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Submit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(LocalForm, {\n              onSubmit: values => this.handleSubmit(values),\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"rating\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Control.select, {\n                  model: \".rating\",\n                  name: \"rating\",\n                  id: \"rating\",\n                  className: \"form-control\",\n                  defaultValue: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"3\",\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"4\",\n                    children: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"5\",\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"your name\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Your Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 60\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".yourname\",\n                  id: \"lastname\",\n                  name: \"lastname\",\n                  placeholder: \"Your Name\",\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".yourname\",\n                  show: \"touched\",\n                  messages: {\n                    required: ' Must be greater than 2 characters',\n                    minLength: ' Must be greater than 2 characters',\n                    maxLength: ' Must be 15 characters or less'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"comment\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 62\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Control.textarea, {\n                  model: \".message\",\n                  id: \"message\",\n                  name: \"message\",\n                  placeholder: \"\",\n                  rows: \"6\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  color: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass DishDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: this.props.comments,\n      isCommentModalOpen: false\n    };\n    this.toggleCommentModal = this.toggleCommentModal.bind(this);\n  }\n\n  toggleCommentModal() {\n    this.setState({\n      isCommentModalOpen: !this.state.isCommentModalOpen\n    });\n  }\n\n  getFormatedDate(date) {\n    let d = new Date(date);\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    return \" , \" + months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear();\n  }\n\n  render() {\n    const cmt = this.props.comments.map(c => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-unstyled\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: c.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"-- \", c.author, this.getFormatedDate(c.date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            active: true,\n            children: this.props.dish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 mt-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardImg, {\n              top: true,\n              width: \"100%\",\n              src: this.props.dish.image,\n              alt: \"Card image cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: this.props.dish.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardText, {\n                children: this.props.dish.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 mt-3 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), cmt, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: \"//Button here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n            show: this.state.isCommentModalOpen,\n            handleClose: this.toggleCommentModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["D:/React/single-page-application/src/components/DishDetail.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","CardText","BreadcrumbItem","Breadcrumb","Button","Modal","ModalHeader","ModalBody","Label","Row","Link","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isCommentModalOpen","handleSubmit","bind","toggleCommentModal","setState","values","console","log","JSON","stringify","alert","render","DishDetail","comments","getFormatedDate","date","d","Date","months","getMonth","getDate","getFullYear","cmt","map","c","comment","author","id","dish","name","image","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardTitle, CardText,BreadcrumbItem,Breadcrumb,Button ,\r\n    Modal, ModalHeader, ModalBody, Label, Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n//Functions for Validations\r\n//(1)Required field\r\nconst required = (val) => val && val.length;\r\n//(2)Range \r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isCommentModalOpen : false\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleCommentModal = this.toggleCommentModal.bind(this);\r\n        \r\n    }\r\n\r\n    toggleCommentModal(){\r\n        this.setState({isCommentModalOpen : !this.state.isCommentModalOpen});\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.toggleCommentModal();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Button outline color=\"secondary\" onClick={this.toggleCommentModal}><i class=\"fa fa-lg fa-pencil\" aria-hidden=\"true\"></i> Submit Comment</Button>{' '}\r\n            <Modal isOpen={this.state.isCommentModalOpen} toggle={this.handleSubmit}>\r\n                <ModalHeader><b>Submit Comment</b></ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"container\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\"><b>Rating</b></Label>\r\n                                <Control.select model=\".rating\" name=\"rating\" id=\"rating\" className=\"form-control\" defaultValue=\"1\">\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </Control.select>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"your name\"><b>Your Name</b></Label>\r\n                                <Control.text model=\".yourname\" id=\"lastname\" name=\"lastname\" placeholder=\"Your Name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}/>\r\n                                <Errors className=\"text-danger\" model=\".yourname\" show=\"touched\" messages={{\r\n                                    required : ' Must be greater than 2 characters',\r\n                                    minLength: ' Must be greater than 2 characters',\r\n                                    maxLength: ' Must be 15 characters or less',\r\n                                }} />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\"><b>Comment</b></Label>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" placeholder=\"\" rows=\"6\" className=\"form-control\"/>        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass DishDetail extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            comments : this.props.comments,\r\n            isCommentModalOpen : false\r\n        }\r\n        this.toggleCommentModal = this.toggleCommentModal.bind(this);\r\n    }\r\n\r\n    toggleCommentModal(){\r\n        this.setState({isCommentModalOpen : !this.state.isCommentModalOpen});\r\n    }\r\n\r\n    getFormatedDate(date) {\r\n        let d = new Date(date);\r\n        var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        return (\" , \" + months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear())\r\n    }\r\n\r\n    render() {\r\n        const cmt = this.props.comments.map((c) => {\r\n            return (\r\n                <div key = {c.id}>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>{c.comment}</li>\r\n                        <li>-- {c.author}{this.getFormatedDate(c.date)}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 mt-3 mb-3\">\r\n                    <Card>\r\n                        <CardImg top width=\"100%\" src={this.props.dish.image} alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                            <CardTitle tag=\"h5\">{this.props.dish.name}</CardTitle>\r\n                            <CardText>{this.props.dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 mt-3 mb-3\">\r\n                    <h3>Comments</h3>\r\n                    {cmt}\r\n                    <div className=\"row\">\r\n                //Button here\r\n                </div>\r\n                    <CommentForm show={this.state.isCommentModalOpen} handleClose={this.toggleCommentModal}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}