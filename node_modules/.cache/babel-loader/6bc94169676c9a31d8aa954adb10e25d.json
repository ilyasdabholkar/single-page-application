{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/comments'; //Reducer function which takes 2 parameters previous state and action\n//action.payload contains the information regarding dishes \n//if dishes failed then action.payload will be containing an error message\n\nexport const Dishes = (state = {\n  isLoading: true,\n  errMess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["D:/React/single-page-application/src/redux/dishes.js"],"names":["ActionTypes","DISHES","Dishes","state","isLoading","errMess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAAQC,MAAR,QAAqB,oBAArB,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAC3BC,EAAAA,OAAO,EAAE,IADkB;AAE3BC,EAAAA,MAAM,EAAC;AAFoB,CAAT,EAENC,MAFM,KAEK;AACvB,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,UAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAA3D,OAAP;;AAEJ,SAAKV,WAAW,CAACW,cAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,MAAM,EAAE;AAAnD,OAAP;;AAEJ,SAAKN,WAAW,CAACY,aAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA7C,OAAP;;AAEJ;AACI,aAAOP,KAAP;AAXR;AAaH,CAhBM;KAAMD,M","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport {DISHES} from '../shared/comments';\r\n\r\n//Reducer function which takes 2 parameters previous state and action\r\n//action.payload contains the information regarding dishes \r\n//if dishes failed then action.payload will be containing an error message\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}