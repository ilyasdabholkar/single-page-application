{"ast":null,"code":"import * as ActionTypes from './ActionTypes'; //Reducer function which takes 2 parameters previous state and action\n\nexport const Comments = (state = {\n  errMess: null,\n  comments: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        comments: action.payload\n      };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        comments: []\n      };\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload; //comment.id = state.comments.length;\n      //comment.date = new Date().toISOString();\n\n      return { ...state,\n        comments: state.comments.concat(comment)\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/React/single-page-application/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG;AAC7BC,EAAAA,OAAO,EAAG,IADmB;AAE7BC,EAAAA,QAAQ,EAAG;AAFkB,CAAT,EAGrBC,MAHqB,KAGV;AACV,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWM,QAAAA,SAAS,EAAE,KAAtB;AAA6BL,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,QAAQ,EAAEC,MAAM,CAACI;AAA7D,OAAP;;AAEJ,SAAKT,WAAW,CAACU,eAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWM,QAAAA,SAAS,EAAE,KAAtB;AAA6BL,QAAAA,OAAO,EAAEE,MAAM,CAACI,OAA7C;AAAsDL,QAAAA,QAAQ,EAAC;AAA/D,OAAP;;AAEJ,SAAKJ,WAAW,CAACW,WAAjB;AACI,UAAIC,OAAO,GAAGP,MAAM,CAACI,OAArB,CADJ,CAEI;AACA;;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAWE,QAAAA,QAAQ,EAAGF,KAAK,CAACE,QAAN,CAAeS,MAAf,CAAsBD,OAAtB;AAAtB,OAAP;;AACJ;AACI,aAAOV,KAAP;AAbR;AAeH,CAnBM;KAAMD,Q","sourcesContent":["\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n//Reducer function which takes 2 parameters previous state and action\r\nexport const Comments = (state = {\r\n    errMess : null,\r\n    comments : []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments:[]};\r\n            \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            //comment.id = state.comments.length;\r\n            //comment.date = new Date().toISOString();\r\n            return {...state, comments : state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}