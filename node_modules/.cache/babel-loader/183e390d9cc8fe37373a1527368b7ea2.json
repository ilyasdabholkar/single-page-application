{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\single-page-application\\\\src\\\\components\\\\CommentForm.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form'; //Functions for Validations\n//(1)Required field\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = val => val && val.length; //(2)Range \n\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nexport class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    alert('Current State is: ' + JSON.stringify(values));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.show,\n      toggle: this.props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(LocalForm, {\n          onSubmit: values => this.handleSubmit(values),\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"firstname\",\n              md: 2,\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 10,\n              children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".firstname\",\n                id: \"firstname\",\n                name: \"firstname\",\n                placeholder: \"FirstName\",\n                className: \"form-control\",\n                validators: {\n                  required,\n                  minLength: minLength(3),\n                  maxLength: maxLength(15)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".firstname\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: 'Must be greater than 2 characters',\n                  maxLength: 'Must be 15 characters or less'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/React/single-page-application/src/components/CommentForm.js"],"names":["React","Component","Modal","ModalHeader","ModalBody","Label","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","handleSubmit","bind","values","console","log","JSON","stringify","alert","render","show","handleClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAiBC,WAAjB,EAA6BC,SAA7B,EAAwCC,KAAxC,QACO,YADP;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA4BC,MAA5B,QAAyC,kBAAzC,C,CAEA;AACA;;;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAASA,GAAG,IAAIA,GAAG,CAACC,MAArC,C,CACA;;;AACA,MAAMC,SAAS,GAAIC,GAAD,IAAUH,GAAD,IAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAA7D;;AACA,MAAMC,SAAS,GAAID,GAAD,IAAUH,GAAD,IAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAA7D;;AAEA,OAAO,MAAME,WAAN,SAA0Bd,SAA1B,CAAmC;AAEtCe,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,MAAD,EAAS;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAnC;AACAK,IAAAA,KAAK,CAAC,uBAAuBF,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAxB,CAAL;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,IAA1B;AAAgC,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,WAAnD;AAAA,8BACQ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,SAAD;AAAA,+BACA,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGR,MAAD,IAAY,KAAKF,YAAL,CAAkBE,MAAlB,CAAjC;AAAA,iCACY,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,WAAf;AAA2B,cAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,EAAT;AAAA,sCACI,QAAC,OAAD,CAAS,IAAT;AAAc,gBAAA,KAAK,EAAC,YAApB;AAAiC,gBAAA,EAAE,EAAC,WAApC;AAAgD,gBAAA,IAAI,EAAC,WAArD;AAAiE,gBAAA,WAAW,EAAC,WAA7E;AAAyF,gBAAA,SAAS,EAAC,cAAnG;AACA,gBAAA,UAAU,EAAE;AACRX,kBAAAA,QADQ;AACEK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CADtB;AAC2BF,kBAAAA,SAAS,EAAGA,SAAS,CAAC,EAAD;AADhD;AADZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,YAAtC;AAAmD,gBAAA,IAAI,EAAC,SAAxD;AAAkE,gBAAA,QAAQ,EAAE;AACxEH,kBAAAA,QAAQ,EAAG,UAD6D;AAExEK,kBAAAA,SAAS,EAAG,mCAF4D;AAGxEF,kBAAAA,SAAS,EAAG;AAH4D;AAA5E;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AApCqC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal , ModalHeader,ModalBody, Label\r\n} from 'reactstrap';\r\nimport { Control, LocalForm,Errors} from 'react-redux-form';\r\n\r\n//Functions for Validations\r\n//(1)Required field\r\nconst required = (val) => val && val.length;\r\n//(2)Range \r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nexport class CommentForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Modal isOpen={this.props.show} toggle={this.props.handleClose}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"FirstName\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3) ,maxLength : maxLength(15)\r\n                                        }}/>   \r\n                                        <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{\r\n                                            required : 'Required',\r\n                                            minLength : 'Must be greater than 2 characters',\r\n                                            maxLength : 'Must be 15 characters or less',\r\n                                        }}/>                                   \r\n                                    </Col>\r\n                                </Row>\r\n                    </LocalForm>\r\n                    </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}